import discord
import os
import sys
import speech_recognition as sr
import subprocess
from discord.ext import commands
from discord import FFmpegPCMAudio
import asyncio

bot = commands.Bot(command_prefix="!", intents=discord.Intents.all())

@bot.event
async def on_ready():
    """S'ex√©cute quand le bot est connect√© et pr√™t."""
    print(f"[LOG] Bot connect√© en tant que {bot.user} et pr√™t √† fonctionner")

    # V√©rification si FFmpeg est install√©
    try:
        subprocess.run(["ffmpeg", "-version"], check=True)
        print("[LOG] FFmpeg est install√© et fonctionne.")
    except Exception as e:
        print(f"[LOG] Erreur : FFmpeg n'est pas install√© ! {e}")

@bot.command()
async def join(ctx):
    """Rejoint le canal vocal de l'utilisateur et commence √† √©couter."""
    if ctx.author.voice:
        channel = ctx.author.voice.channel
        vc = await channel.connect()
        print(f"[LOG] Bot rejoint le canal vocal: {channel.name}")
        await ctx.send("üé§ J'√©coute les voix...")

        # Commence l'√©coute
        await listen_voice(ctx, vc)
    else:
        await ctx.send("Tu dois √™tre dans un canal vocal pour utiliser cette commande!")
        print("[LOG] Tentative √©chou√©e : utilisateur non connect√©")

@bot.command()
async def leave(ctx):
    """Quitte le canal vocal."""
    if ctx.voice_client:
        await ctx.voice_client.disconnect()
        print("[LOG] Bot quitte le canal vocal")
    else:
        await ctx.send("Je ne suis pas dans un canal vocal!")
        print("[LOG] Tentative √©chou√©e : bot non connect√©")

async def listen_voice(ctx, vc):
    """√âcoute et analyse les voix en temps r√©el."""
    recognizer = sr.Recognizer()
    
    while vc.is_connected():
        with sr.Microphone() as source:
            try:
                print("[LOG] √âcoute en cours...")
                audio = recognizer.listen(source, timeout=5)
                text = recognizer.recognize_google(audio, language="fr-FR")
                print(f"[LOG] Transcription : {text}")

                # D√©tection de mots-cl√©s
                explique_variants = ["explique", "expliques", "expliquer", "expliquez"]
                if any(word in text.lower() for word in explique_variants):
                    response = "explique hahaha pff ouais c'est un peu chiant les gars en gros Luden..."
                    await ctx.send(response)
                    print(f"[LOG] R√©ponse envoy√©e : {response[:50]}...")

            except sr.UnknownValueError:
                print("[LOG] Impossible de reconna√Ætre l'audio")
            except sr.RequestError:
                print("[LOG] Erreur avec l'API de reconnaissance vocale")

@bot.event
async def on_disconnect():
    """Log lorsque le bot se d√©connecte."""
    print("[LOG] Bot d√©connect√©")

@bot.event
async def on_error(event, *args, **kwargs):
    """Log les erreurs."""
    print(f"[LOG] Erreur d√©tect√©e dans {event}: {sys.exc_info()[1]}")

TOKEN = os.getenv("DISCORD_TOKEN")
if TOKEN:
    print("[LOG] D√©marrage du bot...")
    bot.run(TOKEN)
else:
    print("[LOG] ERREUR : Le token Discord est introuvable ! V√©rifie tes variables d'environnement.")
